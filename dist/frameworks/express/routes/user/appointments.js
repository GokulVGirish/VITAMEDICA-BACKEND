"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const appointments_1 = __importDefault(require("../../../../interface_adapters/controllers/user/appointments"));
const userRepository_1 = __importDefault(require("../../../../interface_adapters/repositories/userRepository"));
const jwt_verify_1 = __importDefault(require("../../middlewares/jwt-verify"));
const user_1 = require("../../middlewares/user");
const role_Authenticate_1 = __importDefault(require("../../middlewares/role-Authenticate"));
const appointments_2 = __importDefault(require("../../../../use_cases/user/appointments"));
const awsS3_1 = __importDefault(require("../../../services/awsS3"));
const multer_1 = __importDefault(require("../../../services/multer"));
const respository = new userRepository_1.default();
const awsS3 = new awsS3_1.default();
const interactor = new appointments_2.default(respository, awsS3);
const controller = new appointments_1.default(interactor);
const appointmentRouter = express_1.default.Router();
appointmentRouter.post("/order", jwt_verify_1.default, (0, role_Authenticate_1.default)("user"), user_1.getUser, controller.razorPayOrder.bind(controller));
appointmentRouter.post("/order/validate", jwt_verify_1.default, (0, role_Authenticate_1.default)("user"), user_1.getUser, controller.razorPayValidate.bind(controller));
appointmentRouter.post("/book/wallet", jwt_verify_1.default, (0, role_Authenticate_1.default)("user"), user_1.getUser, controller.bookFromWallet.bind(controller));
appointmentRouter.post("/lock-slot", jwt_verify_1.default, (0, role_Authenticate_1.default)("user"), user_1.getUser, controller.lockSlot.bind(controller));
appointmentRouter.get("/", jwt_verify_1.default, (0, role_Authenticate_1.default)("user"), user_1.getUser, controller.getAppointments.bind(controller));
appointmentRouter.put("/:appointmentId/cancel", jwt_verify_1.default, (0, role_Authenticate_1.default)("user"), user_1.getUser, controller.cancelAppointment.bind(controller));
appointmentRouter.put(`/:appointmentId/review`, jwt_verify_1.default, (0, role_Authenticate_1.default)("user"), user_1.getUser, controller.addReview.bind(controller));
appointmentRouter.get("/:appointmentId/detail", jwt_verify_1.default, (0, role_Authenticate_1.default)("user"), user_1.getUser, controller.getAppointmentDetail.bind(controller));
appointmentRouter.post("/medicalRecords/:appointmentId", jwt_verify_1.default, (0, role_Authenticate_1.default)("user"), multer_1.default.array("medicalRecords"), controller.medicalRecordsUpload.bind(controller));
exports.default = appointmentRouter;
